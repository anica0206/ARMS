<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcwk.ehr.dm">
<insert id="doSend" parameterType="DmVO" >
    <choose>
        <when test="room !=0">
            INSERT INTO DM (
        seq,
        room,
        sender,
        receiver,
        contents,
        send_dt,
        read_Dt,
        read_chk
    ) VALUES (
        DM_SEQ.NEXTVAL,
        1,
        ${sender},
        dlgkssk1627@naver.com,
        #{contents},
        SYSDATE,
        SYSDATE,
        0
    )
        </when>
        <otherwise>
             INSERT INTO DM (
        seq,
        room,
        sender,
        receiver,
        contents,
        send_dt,
        read_Dt,
        read_chk
    ) VALUES (
        DM_SEQ.NEXTVAL,
        1,
        ${sender},
        dlgkssk1627@naver.com,
        #{contents},
        SYSDATE,
        SYSDATE,
        0
    )
        </otherwise>
    </choose>
</insert>
  <update id="updateReadChk" parameterType="DmVO">
    UPDATE dm
    SET read_chk = 1
    WHERE read_chk = 0
      
      AND (
        <choose>
            <when test="room != 0">
                room = #{room} AND receiver = #{receiver} 
            </when>
            
        </choose>
      )
  </update>
  <select id="recentMessage" parameterType="DmVO" resultType="DmVO">
 <![CDATA[
    SELECT seq,
           room,
           sender,
           receiver,
           contents,
           TO_CHAR(send_dt, 'YYYY-MM-DD HH24:MI') AS sendDt,
           TO_CHAR(read_dt, 'YYYY-MM-DD HH24:MI') AS readDt,
           read_chk
    FROM dm
    WHERE (seq, room) IN (SELECT MAX(seq), room FROM dm GROUP BY room)
      AND (sender = #{sender} OR reciever = #{receiver})
    ORDER BY seq DESC
    ]]>
</select>
<select id="contentsList" parameterType="DmVO" resultType="DmVO">
    <![CDATA[
        SELECT m.seq,
               m.room,
               m.sender,
               m.receiver,
               m.contents,
               TO_CHAR(m.send_dt, 'YYYY-MM-DD HH24:MI') AS sendDT,
               TO_CHAR(m.read_dt, 'YYYY-MM-DD HH24:MI') AS sendDT,
               m.read_chk AS readChk,
               u.name
        FROM dm m
        LEFT OUTER JOIN users u ON m.sender = u.name 
        order by seq
        ]]>  
    
</select>
<delete id="doDelete" parameterType="DmVO">
        DELETE FROM dm
        WHERE seq = #{seq}  
  </delete>        
</mapper>